// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AirportsColumns holds the columns for the "airports" table.
	AirportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
	}
	// AirportsTable holds the schema information for the "airports" table.
	AirportsTable = &schema.Table{
		Name:       "airports",
		Columns:    AirportsColumns,
		PrimaryKey: []*schema.Column{AirportsColumns[0]},
	}
	// BookingsColumns holds the columns for the "bookings" table.
	BookingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_id", Type: field.TypeUUID},
		{Name: "going_flight_id", Type: field.TypeUUID},
		{Name: "return_flight_id", Type: field.TypeUUID, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Cancelled", "Scheduled", "Departed"}},
	}
	// BookingsTable holds the schema information for the "bookings" table.
	BookingsTable = &schema.Table{
		Name:       "bookings",
		Columns:    BookingsColumns,
		PrimaryKey: []*schema.Column{BookingsColumns[0]},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "license_id", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// FlightsColumns holds the columns for the "flights" table.
	FlightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "departure_time", Type: field.TypeTime},
		{Name: "arrival_time", Type: field.TypeTime},
		{Name: "total_slots", Type: field.TypeInt},
		{Name: "available_slots", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Cancelled", "Departed", "Landed", "Scheduled", "Delayed"}},
		{Name: "origin_id", Type: field.TypeUUID},
		{Name: "destinartion_id", Type: field.TypeUUID},
	}
	// FlightsTable holds the schema information for the "flights" table.
	FlightsTable = &schema.Table{
		Name:       "flights",
		Columns:    FlightsColumns,
		PrimaryKey: []*schema.Column{FlightsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "flights_airports_origin",
				Columns:    []*schema.Column{FlightsColumns[9]},
				RefColumns: []*schema.Column{AirportsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "flights_airports_destination",
				Columns:    []*schema.Column{FlightsColumns[10]},
				RefColumns: []*schema.Column{AirportsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TicketsColumns holds the columns for the "tickets" table.
	TicketsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Canceled", "Departed", "Scheduled"}},
		{Name: "passenger_name", Type: field.TypeString},
		{Name: "passenger_license_id", Type: field.TypeString},
		{Name: "passenger_email", Type: field.TypeString},
		{Name: "seat_number", Type: field.TypeString},
		{Name: "class", Type: field.TypeEnum, Enums: []string{"FirstClass", "BusinessClass", "EconomyClass"}},
		{Name: "booking_id", Type: field.TypeUUID},
	}
	// TicketsTable holds the schema information for the "tickets" table.
	TicketsTable = &schema.Table{
		Name:       "tickets",
		Columns:    TicketsColumns,
		PrimaryKey: []*schema.Column{TicketsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tickets_bookings_ticket",
				Columns:    []*schema.Column{TicketsColumns[9]},
				RefColumns: []*schema.Column{BookingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "user"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AirportsTable,
		BookingsTable,
		CustomersTable,
		FlightsTable,
		TicketsTable,
		UsersTable,
	}
)

func init() {
	FlightsTable.ForeignKeys[0].RefTable = AirportsTable
	FlightsTable.ForeignKeys[1].RefTable = AirportsTable
	TicketsTable.ForeignKeys[0].RefTable = BookingsTable
}
