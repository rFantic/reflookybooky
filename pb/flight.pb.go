// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/flight.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Airport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address   string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Airport) Reset() {
	*x = Airport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Airport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Airport) ProtoMessage() {}

func (x *Airport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Airport.ProtoReflect.Descriptor instead.
func (*Airport) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{0}
}

func (x *Airport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Airport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Airport) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Airport) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Airport) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Airports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Airports []*Airport `protobuf:"bytes,1,rep,name=airports,proto3" json:"airports,omitempty"`
}

func (x *Airports) Reset() {
	*x = Airports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Airports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Airports) ProtoMessage() {}

func (x *Airports) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Airports.ProtoReflect.Descriptor instead.
func (*Airports) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{1}
}

func (x *Airports) GetAirports() []*Airport {
	if x != nil {
		return x.Airports
	}
	return nil
}

type Flight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Origin         *Airport               `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination    *Airport               `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	TotalSlots     int64                  `protobuf:"varint,5,opt,name=total_slots,json=totalSlots,proto3" json:"total_slots,omitempty"`
	AvailableSlots int64                  `protobuf:"varint,6,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
	DepartureTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	Status         string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Flight) Reset() {
	*x = Flight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flight) ProtoMessage() {}

func (x *Flight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flight.ProtoReflect.Descriptor instead.
func (*Flight) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{2}
}

func (x *Flight) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flight) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flight) GetOrigin() *Airport {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Flight) GetDestination() *Airport {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Flight) GetTotalSlots() int64 {
	if x != nil {
		return x.TotalSlots
	}
	return 0
}

func (x *Flight) GetAvailableSlots() int64 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *Flight) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *Flight) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *Flight) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Flight) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Flight) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type FlightUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	OriginId      *string                `protobuf:"bytes,3,opt,name=origin_id,json=originId,proto3,oneof" json:"origin_id,omitempty"`
	DestinationId *string                `protobuf:"bytes,4,opt,name=destination_id,json=destinationId,proto3,oneof" json:"destination_id,omitempty"`
	TotalSlots    *int64                 `protobuf:"varint,5,opt,name=total_slots,json=totalSlots,proto3,oneof" json:"total_slots,omitempty"`
	DepartureTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=departure_time,json=departureTime,proto3,oneof" json:"departure_time,omitempty"`
	ArrivalTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=arrival_time,json=arrivalTime,proto3,oneof" json:"arrival_time,omitempty"`
	Status        *string                `protobuf:"bytes,8,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *FlightUpdateInput) Reset() {
	*x = FlightUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightUpdateInput) ProtoMessage() {}

func (x *FlightUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightUpdateInput.ProtoReflect.Descriptor instead.
func (*FlightUpdateInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{3}
}

func (x *FlightUpdateInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlightUpdateInput) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FlightUpdateInput) GetOriginId() string {
	if x != nil && x.OriginId != nil {
		return *x.OriginId
	}
	return ""
}

func (x *FlightUpdateInput) GetDestinationId() string {
	if x != nil && x.DestinationId != nil {
		return *x.DestinationId
	}
	return ""
}

func (x *FlightUpdateInput) GetTotalSlots() int64 {
	if x != nil && x.TotalSlots != nil {
		return *x.TotalSlots
	}
	return 0
}

func (x *FlightUpdateInput) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *FlightUpdateInput) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *FlightUpdateInput) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type FlightInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OriginId      string                 `protobuf:"bytes,2,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	DestinationId string                 `protobuf:"bytes,3,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	TotalSlots    *int64                 `protobuf:"varint,4,opt,name=total_slots,json=totalSlots,proto3,oneof" json:"total_slots,omitempty"`
	DepartureTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FlightInput) Reset() {
	*x = FlightInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightInput) ProtoMessage() {}

func (x *FlightInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightInput.ProtoReflect.Descriptor instead.
func (*FlightInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{4}
}

func (x *FlightInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlightInput) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

func (x *FlightInput) GetDestinationId() string {
	if x != nil {
		return x.DestinationId
	}
	return ""
}

func (x *FlightInput) GetTotalSlots() int64 {
	if x != nil && x.TotalSlots != nil {
		return *x.TotalSlots
	}
	return 0
}

func (x *FlightInput) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *FlightInput) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *FlightInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Flights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flights []*Flight `protobuf:"bytes,1,rep,name=flights,proto3" json:"flights,omitempty"`
}

func (x *Flights) Reset() {
	*x = Flights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flights) ProtoMessage() {}

func (x *Flights) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flights.ProtoReflect.Descriptor instead.
func (*Flights) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{5}
}

func (x *Flights) GetFlights() []*Flight {
	if x != nil {
		return x.Flights
	}
	return nil
}

type AvailableSlotsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AvailableSlots int64  `protobuf:"varint,2,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
}

func (x *AvailableSlotsInput) Reset() {
	*x = AvailableSlotsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableSlotsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableSlotsInput) ProtoMessage() {}

func (x *AvailableSlotsInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableSlotsInput.ProtoReflect.Descriptor instead.
func (*AvailableSlotsInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{6}
}

func (x *AvailableSlotsInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AvailableSlotsInput) GetAvailableSlots() int64 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

type FlightSearchInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableSlotsAtLeast *int64                 `protobuf:"varint,1,opt,name=available_slots_at_least,json=availableSlotsAtLeast,proto3,oneof" json:"available_slots_at_least,omitempty"`
	OriginId              *string                `protobuf:"bytes,2,opt,name=origin_id,json=originId,proto3,oneof" json:"origin_id,omitempty"`
	DestinationId         *string                `protobuf:"bytes,3,opt,name=destination_id,json=destinationId,proto3,oneof" json:"destination_id,omitempty"`
	DepartureTimeBefore   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=departure_time_before,json=departureTimeBefore,proto3,oneof" json:"departure_time_before,omitempty"`
	DepartureTimeAfter    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=departure_time_after,json=departureTimeAfter,proto3,oneof" json:"departure_time_after,omitempty"`
	Status                *string                `protobuf:"bytes,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *FlightSearchInput) Reset() {
	*x = FlightSearchInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightSearchInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightSearchInput) ProtoMessage() {}

func (x *FlightSearchInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightSearchInput.ProtoReflect.Descriptor instead.
func (*FlightSearchInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_proto_rawDescGZIP(), []int{7}
}

func (x *FlightSearchInput) GetAvailableSlotsAtLeast() int64 {
	if x != nil && x.AvailableSlotsAtLeast != nil {
		return *x.AvailableSlotsAtLeast
	}
	return 0
}

func (x *FlightSearchInput) GetOriginId() string {
	if x != nil && x.OriginId != nil {
		return *x.OriginId
	}
	return ""
}

func (x *FlightSearchInput) GetDestinationId() string {
	if x != nil && x.DestinationId != nil {
		return *x.DestinationId
	}
	return ""
}

func (x *FlightSearchInput) GetDepartureTimeBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTimeBefore
	}
	return nil
}

func (x *FlightSearchInput) GetDepartureTimeAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTimeAfter
	}
	return nil
}

func (x *FlightSearchInput) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

var File_proto_flight_proto protoreflect.FileDescriptor

var file_proto_flight_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x33, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x08, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x61,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xa2, 0x03, 0x0a, 0x06, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc2, 0x03, 0x0a,
	0x11, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x46, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xb5, 0x02, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x41, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x07, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x07, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x13, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x11, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x3c, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x41, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x15,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x13, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x51, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x12, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42,
	0x18, 0x0a, 0x16, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x82, 0x04,
	0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x00, 0x12, 0x2d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x00,
	0x12, 0x2b, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x00, 0x12, 0x23, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_flight_proto_rawDescOnce sync.Once
	file_proto_flight_proto_rawDescData = file_proto_flight_proto_rawDesc
)

func file_proto_flight_proto_rawDescGZIP() []byte {
	file_proto_flight_proto_rawDescOnce.Do(func() {
		file_proto_flight_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_flight_proto_rawDescData)
	})
	return file_proto_flight_proto_rawDescData
}

var file_proto_flight_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_flight_proto_goTypes = []interface{}{
	(*Airport)(nil),               // 0: pb.Airport
	(*Airports)(nil),              // 1: pb.Airports
	(*Flight)(nil),                // 2: pb.Flight
	(*FlightUpdateInput)(nil),     // 3: pb.FlightUpdateInput
	(*FlightInput)(nil),           // 4: pb.FlightInput
	(*Flights)(nil),               // 5: pb.Flights
	(*AvailableSlotsInput)(nil),   // 6: pb.AvailableSlotsInput
	(*FlightSearchInput)(nil),     // 7: pb.FlightSearchInput
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*UUID)(nil),                  // 9: pb.UUID
	(*Pagination)(nil),            // 10: pb.Pagination
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_proto_flight_proto_depIdxs = []int32{
	0,  // 0: pb.Airports.airports:type_name -> pb.Airport
	0,  // 1: pb.Flight.origin:type_name -> pb.Airport
	0,  // 2: pb.Flight.destination:type_name -> pb.Airport
	8,  // 3: pb.Flight.departure_time:type_name -> google.protobuf.Timestamp
	8,  // 4: pb.Flight.arrival_time:type_name -> google.protobuf.Timestamp
	8,  // 5: pb.FlightUpdateInput.departure_time:type_name -> google.protobuf.Timestamp
	8,  // 6: pb.FlightUpdateInput.arrival_time:type_name -> google.protobuf.Timestamp
	8,  // 7: pb.FlightInput.departure_time:type_name -> google.protobuf.Timestamp
	8,  // 8: pb.FlightInput.arrival_time:type_name -> google.protobuf.Timestamp
	2,  // 9: pb.Flights.flights:type_name -> pb.Flight
	8,  // 10: pb.FlightSearchInput.departure_time_before:type_name -> google.protobuf.Timestamp
	8,  // 11: pb.FlightSearchInput.departure_time_after:type_name -> google.protobuf.Timestamp
	0,  // 12: pb.FlightService.PostAirport:input_type -> pb.Airport
	9,  // 13: pb.FlightService.GetAirport:input_type -> pb.UUID
	10, // 14: pb.FlightService.GetAirports:input_type -> pb.Pagination
	4,  // 15: pb.FlightService.PostFlight:input_type -> pb.FlightInput
	9,  // 16: pb.FlightService.GetFlight:input_type -> pb.UUID
	10, // 17: pb.FlightService.GetFlights:input_type -> pb.Pagination
	3,  // 18: pb.FlightService.UpdateFlight:input_type -> pb.FlightUpdateInput
	6,  // 19: pb.FlightService.SetAvailableSlots:input_type -> pb.AvailableSlotsInput
	7,  // 20: pb.FlightService.SearchFlight:input_type -> pb.FlightSearchInput
	9,  // 21: pb.FlightService.CancelFlight:input_type -> pb.UUID
	0,  // 22: pb.FlightService.PostAirport:output_type -> pb.Airport
	0,  // 23: pb.FlightService.GetAirport:output_type -> pb.Airport
	1,  // 24: pb.FlightService.GetAirports:output_type -> pb.Airports
	2,  // 25: pb.FlightService.PostFlight:output_type -> pb.Flight
	2,  // 26: pb.FlightService.GetFlight:output_type -> pb.Flight
	5,  // 27: pb.FlightService.GetFlights:output_type -> pb.Flights
	11, // 28: pb.FlightService.UpdateFlight:output_type -> google.protobuf.Empty
	11, // 29: pb.FlightService.SetAvailableSlots:output_type -> google.protobuf.Empty
	5,  // 30: pb.FlightService.SearchFlight:output_type -> pb.Flights
	11, // 31: pb.FlightService.CancelFlight:output_type -> google.protobuf.Empty
	22, // [22:32] is the sub-list for method output_type
	12, // [12:22] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_flight_proto_init() }
func file_proto_flight_proto_init() {
	if File_proto_flight_proto != nil {
		return
	}
	file_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_flight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Airport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Airports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableSlotsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightSearchInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_flight_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_flight_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_flight_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_flight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_flight_proto_goTypes,
		DependencyIndexes: file_proto_flight_proto_depIdxs,
		MessageInfos:      file_proto_flight_proto_msgTypes,
	}.Build()
	File_proto_flight_proto = out.File
	file_proto_flight_proto_rawDesc = nil
	file_proto_flight_proto_goTypes = nil
	file_proto_flight_proto_depIdxs = nil
}
